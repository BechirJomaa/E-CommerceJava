/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Services;

import Adapter.ServicesListAdapter;
import DAO.CategorieServiceDao;
import DAO.CommentaireServiceDAO;
import DAO.CommentaireSujetDAO;
import DAO.ServiceDao;
import DAO.UserDAO;
import Entity.CategorieService;
import Entity.CommentaireService;
import Entity.CommentaireSujet;
import Entity.Service;
import Entity.User;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author gafsi
 */
public class PanelServices extends javax.swing.JPanel {

    /**
     * Creates new form PanelForum
     */
    private List<Service> listServices = new ArrayList<>();
    private static int userId;
    private User user;
    private List<CommentaireService> listCom;
    private Integer[] lid;
    private JTextField[] tabCom;
    private JLabel[] lmodifier;
    private JLabel[] lSupprimer;

    public PanelServices(int userid) {
        listServices = new ServiceDao().findAllServicesValid();
        PanelServices.userId = userid;
        user = new UserDAO().findUserById(userid);
        initComponents();
        loaddServices();
        loadComments();
        commentsActions();
        CategorieServiceDao categorieServiceDao = new CategorieServiceDao();
        List<CategorieService> listesDepot = new ArrayList<>();
        listesDepot = categorieServiceDao.findAll();
        cbCategorie.addItem("---- Tous les Services ----");
        for (CategorieService d : listesDepot) {
            cbCategorie.addItem(d.getId());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lServices = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        cbCategorie = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnResearchNom = new javax.swing.JLabel();
        tfRechercheNom = new javax.swing.JTextField();
        labelCategorie = new javax.swing.JLabel();
        labelUser = new javax.swing.JLabel();
        labelAdresse = new javax.swing.JLabel();
        labelMail = new javax.swing.JLabel();
        labelTel = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tfCategorie = new javax.swing.JTextField();
        tfUser = new javax.swing.JTextField();
        tfAdresse = new javax.swing.JTextField();
        tfMail = new javax.swing.JTextField();
        tfTelephone = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelComments = new javax.swing.JPanel();
        tfComment = new javax.swing.JTextField();
        btnComment = new javax.swing.JButton();
        labelVide = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tpDescription = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);
        setLayout(null);

        lServices.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lServices.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lServicesPropertyChange(evt);
            }
        });
        lServices.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lServicesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lServices);

        add(jScrollPane1);
        jScrollPane1.setBounds(100, 150, 180, 350);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Liste des services");
        add(jLabel1);
        jLabel1.setBounds(100, 50, 140, 30);

        cbCategorie.setOpaque(false);
        add(cbCategorie);
        cbCategorie.setBounds(620, 50, 230, 30);

        jLabel2.setText("Categories");
        add(jLabel2);
        jLabel2.setBounds(530, 50, 80, 30);

        jButton1.setText("Rechercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(880, 50, 100, 30);

        btnResearchNom.setIcon(new ImageIcon("images\\icon-research.png"));
        btnResearchNom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResearchNomMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResearchNomMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResearchNomMouseExited(evt);
            }
        });
        add(btnResearchNom);
        btnResearchNom.setBounds(410, 50, 30, 30);

        tfRechercheNom.setText("nom du service");
        tfRechercheNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRechercheNomActionPerformed(evt);
            }
        });
        add(tfRechercheNom);
        tfRechercheNom.setBounds(250, 50, 160, 32);

        labelCategorie.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelCategorie.setText("Cat√©gorie :");
        add(labelCategorie);
        labelCategorie.setBounds(340, 150, 90, 30);

        labelUser.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelUser.setText("Proprietaire");
        add(labelUser);
        labelUser.setBounds(340, 200, 90, 30);

        labelAdresse.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelAdresse.setText("Adresse");
        add(labelAdresse);
        labelAdresse.setBounds(340, 250, 90, 30);

        labelMail.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelMail.setText("Mail");
        add(labelMail);
        labelMail.setBounds(340, 300, 90, 30);

        labelTel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelTel.setText("Telephone");
        add(labelTel);
        labelTel.setBounds(340, 350, 90, 30);

        labelDescription.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelDescription.setText("Description");
        add(labelDescription);
        labelDescription.setBounds(340, 400, 90, 30);
        add(jSeparator1);
        jSeparator1.setBounds(400, 110, 470, 2);

        tfCategorie.setEditable(false);
        tfCategorie.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfCategorie.setBorder(null);
        add(tfCategorie);
        tfCategorie.setBounds(470, 150, 400, 30);

        tfUser.setEditable(false);
        tfUser.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfUser.setBorder(null);
        add(tfUser);
        tfUser.setBounds(470, 200, 400, 30);

        tfAdresse.setEditable(false);
        tfAdresse.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfAdresse.setBorder(null);
        add(tfAdresse);
        tfAdresse.setBounds(470, 250, 400, 30);

        tfMail.setEditable(false);
        tfMail.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfMail.setBorder(null);
        add(tfMail);
        tfMail.setBounds(470, 300, 400, 30);

        tfTelephone.setEditable(false);
        tfTelephone.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tfTelephone.setBorder(null);
        add(tfTelephone);
        tfTelephone.setBounds(470, 350, 400, 30);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Commentaires :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(0, 10, 130, 30);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(240, 270));

        panelComments.setBackground(new java.awt.Color(251, 248, 248));
        panelComments.setPreferredSize(new java.awt.Dimension(400, 700));
        panelComments.setLayout(null);
        jScrollPane3.setViewportView(panelComments);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(0, 50, 310, 280);

        add(jPanel1);
        jPanel1.setBounds(980, 120, 310, 330);
        add(tfComment);
        tfComment.setBounds(980, 460, 200, 30);

        btnComment.setText("Commenter");
        btnComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommentActionPerformed(evt);
            }
        });
        add(btnComment);
        btnComment.setBounds(1180, 460, 110, 30);

        labelVide.setFont(new java.awt.Font("Stencil Std", 2, 12)); // NOI18N
        labelVide.setForeground(new java.awt.Color(153, 153, 153));
        add(labelVide);
        labelVide.setBounds(550, 120, 320, 30);

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tpDescription.setEditable(false);
        tpDescription.setColumns(20);
        tpDescription.setLineWrap(true);
        tpDescription.setRows(5);
        tpDescription.setBorder(null);
        jScrollPane4.setViewportView(tpDescription);

        add(jScrollPane4);
        jScrollPane4.setBounds(470, 400, 400, 90);
    }// </editor-fold>//GEN-END:initComponents

    private void tfRechercheNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRechercheNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRechercheNomActionPerformed

    private void lServicesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lServicesPropertyChange
        // TODO add your handling code here:


    }//GEN-LAST:event_lServicesPropertyChange

    private void lServicesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lServicesValueChanged
        // TODO add your handling code here:
        System.out.println("" + lServices.getSelectedIndex());
        if (listServices.size() != 0 && lServices.getSelectedIndex() != -1) {
            labelAdresse.setText("Adresse");
            labelCategorie.setText("Categorie");
            labelDescription.setText("Description");
            labelMail.setText("Mail");
            labelTel.setText("Telephone");
            labelUser.setText("Proprietaire");
            labelVide.setText("");

            tfAdresse.setText(listServices.get(lServices.getSelectedIndex()).getAdresse());
            tfCategorie.setText(listServices.get(lServices.getSelectedIndex()).getCategorie().getId());
            tfMail.setText(listServices.get(lServices.getSelectedIndex()).getMail());
            tfTelephone.setText("" + listServices.get(lServices.getSelectedIndex()).getTelephone());
            tfUser.setText(listServices.get(lServices.getSelectedIndex()).getProprietaire().getUsername());
            tpDescription.setText(listServices.get(lServices.getSelectedIndex()).getDescription());
            panelComments.removeAll();
            panelComments.repaint();
            panelComments.revalidate();
            loadComments();
            commentsActions();
            loadComments();
            commentsActions();
        } else {
            labelAdresse.setText("");
            tfAdresse.setText("");
            labelCategorie.setText("");
            tfCategorie.setText("");
            labelDescription.setText("");
            tfComment.setText("");
            labelMail.setText("");
            tfMail.setText("");
            labelTel.setText("");
            tfTelephone.setText("");
            labelUser.setText("");
            tfUser.setText("");
            labelVide.setText("Aucun Service dans cette cat√©gorie !");
            tpDescription.setText("");
            panelComments.removeAll();
            panelComments.repaint();
            panelComments.revalidate();
        }
    }//GEN-LAST:event_lServicesValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Service> ls = new ArrayList<>();
        if (cbCategorie.getSelectedIndex() == 0) {
            listServices = new ServiceDao().findAllServicesValid();
        } else {
            listServices = new ServiceDao().findbyCategorie(cbCategorie.getSelectedItem().toString());
        }
        lServices.setModel(new ServicesListAdapter(listServices));
        if (lServices.getModel().getSize() != -1) {
            lServices.setSelectedIndex(0);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommentActionPerformed
        // TODO add your handling code here:
        if (listServices.size() != 0) {

            Service service = new ServiceDao().findServiceById(listServices.get(lServices.getSelectedIndex()).getId());
            CommentaireService com = new CommentaireService();
            com.setCommentaire(tfComment.getText());
            com.setService(service);
            com.setUser(user);
            CommentaireServiceDAO comDao = new CommentaireServiceDAO();
            comDao.addCommentaireService(com);
            tfComment.setText("");
            panelComments.removeAll();
            panelComments.repaint();
            panelComments.revalidate();
            loadComments();
            commentsActions();
        }
    }//GEN-LAST:event_btnCommentActionPerformed

    private void btnResearchNomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResearchNomMouseClicked
        // TODO add your handling code here:
        listServices = new ServiceDao().findByNom(tfRechercheNom.getText());
        lServices.setModel(new ServicesListAdapter(listServices));
        if (lServices.getModel().getSize() != -1) {
            lServices.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnResearchNomMouseClicked

    private void btnResearchNomMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResearchNomMouseEntered
        // TODO add your handling code here:
        btnResearchNom.setIcon(new ImageIcon("images\\icon-researchEntred.png"));
    }//GEN-LAST:event_btnResearchNomMouseEntered

    private void btnResearchNomMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResearchNomMouseExited
        // TODO add your handling code here:
        btnResearchNom.setIcon(new ImageIcon("images\\icon-research.png"));
    }//GEN-LAST:event_btnResearchNomMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComment;
    private javax.swing.JLabel btnResearchNom;
    private javax.swing.JComboBox cbCategorie;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lServices;
    private javax.swing.JLabel labelAdresse;
    private javax.swing.JLabel labelCategorie;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelMail;
    private javax.swing.JLabel labelTel;
    private javax.swing.JLabel labelUser;
    private javax.swing.JLabel labelVide;
    private javax.swing.JPanel panelComments;
    private javax.swing.JTextField tfAdresse;
    private javax.swing.JTextField tfCategorie;
    private javax.swing.JTextField tfComment;
    private javax.swing.JTextField tfMail;
    private javax.swing.JTextField tfRechercheNom;
    private javax.swing.JTextField tfTelephone;
    private javax.swing.JTextField tfUser;
    private javax.swing.JTextArea tpDescription;
    // End of variables declaration//GEN-END:variables
private void loaddServices() {
        lServices.setModel(new ServicesListAdapter(listServices));
        if (lServices.getModel().getSize() != -1) {
            lServices.setSelectedIndex(0);
        }
    }

    private void loadComments() {
        CommentaireService com = new CommentaireService();
        CommentaireServiceDAO comDAO = new CommentaireServiceDAO();
        listCom = comDAO.findCommentaireByService(listServices.get(lServices.getSelectedIndex()).getId());
        lid = new Integer[listCom.size()];
        lmodifier = new JLabel[listCom.size()];
        lSupprimer = new JLabel[listCom.size()];
        tabCom = new JTextField[listCom.size()];
        JLabel[] lUser = new JLabel[listCom.size()];
        JLabel[] lDate = new JLabel[listCom.size()];
        int x = 10;
        int y = 26;
        for (int i = 0; i < listCom.size(); i++) {
            // ajout du proprietaire
            lUser[i] = new JLabel(listCom.get(i).getUser().getUsername());
            lUser[i].setBounds(x + 5, y - 20, 82, 17);
            lUser[i].setForeground(new Color(102, 102, 102));
            lUser[i].setFont(new java.awt.Font("Tahoma", 0, 11));
            panelComments.add(lUser[i]);
            // ajout de la date
            lDate[i] = new JLabel("" + listCom.get(i).getDateComm());
            lDate[i].setBounds(x + 210, y - 18, 82, 17);
            lDate[i].setForeground(new Color(102, 102, 102));
            lDate[i].setFont(new java.awt.Font("Tahoma", 0, 11));
            panelComments.add(lDate[i]);
            //ajout du corps
            tabCom[i] = new JTextField();
            tabCom[i].setText(listCom.get(i).getCommentaire());
            tabCom[i].setBounds(x, y, 270, 25);
            tabCom[i].setForeground(Color.black);
            tabCom[i].setFont(new java.awt.Font("Arial", 0, 12));
            tabCom[i].setEditable(false);
            panelComments.add(tabCom[i]);

            if (userId == listCom.get(i).getUser().getId()) {
                //ajouts du boutton modifier 
                lmodifier[i] = new JLabel("Modifier");
                lmodifier[i].setBounds(x + 155, y + 25, 46, 13);
                lmodifier[i].setForeground(new java.awt.Color(51, 51, 255));
                lmodifier[i].setFont(new java.awt.Font("Tahoma", 1, 10));
                panelComments.add(lmodifier[i]);
                //ajouts du boutton supprimer
                lSupprimer[i] = new JLabel("Supprimer");
                lSupprimer[i].setBounds(x + 210, y + 25, 60, 13);
                lSupprimer[i].setForeground(new java.awt.Color(51, 51, 255));
                lSupprimer[i].setFont(new java.awt.Font("Tahoma", 1, 10));
                panelComments.add(lSupprimer[i]);
            }
            lid[i] = listCom.get(i).getId();
            y += 60;
        }
    }

    private void commentsActions() {
        for (int i = 0; i < listCom.size(); i++) {
            int j = i;
            if (lmodifier[i] != null) {
                lmodifier[i].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        modifierrMouseClicked(evt, j);
                    }

                    @Override
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        modifierMouseEntered(evt, j);
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        modifierMouseExited(evt, j);
                    }
                });
                tabCom[i].addKeyListener(new KeyAdapter() {
                    @Override
                    public void keyPressed(KeyEvent e) {
                        modifierKeyPressed(e, j);
                    }
                });

                lSupprimer[i].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        supprimerMouseClicked(evt, j);
                    }

                    @Override
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        supprimerMouseEntered(evt, j);
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        supprimerMouseExited(evt, j);
                    }

                });
            }

        }
    }

    private void modifierrMouseClicked(MouseEvent evt, int i) {
        tabCom[i].setEditable(true);
//        removeAll();
//        repaint();
//        revalidate();
//        PanelSujetDisplay p = new PanelSujetDisplay(lid[i], userId);
//        p.setBounds(0, 0, 1310, 500);
//        add(p);
//        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

    }

    private void modifierMouseEntered(MouseEvent evt, int j) {
        setCursor(new Cursor(Cursor.HAND_CURSOR));

    }

    private void modifierMouseExited(MouseEvent evt, int j) {
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    private void supprimerMouseClicked(MouseEvent evt, int i) {
        CommentaireServiceDAO serviceDAO = new CommentaireServiceDAO();
        serviceDAO.removeCommentaireById(listCom.get(i).getId());
        panelComments.removeAll();
        panelComments.repaint();
        panelComments.revalidate();
        loadComments();
        commentsActions();
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

    }

    private void supprimerMouseEntered(MouseEvent evt, int j) {
        setCursor(new Cursor(Cursor.HAND_CURSOR));

    }

    private void supprimerMouseExited(MouseEvent evt, int j) {
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }

    private void modifierKeyPressed(KeyEvent e, int j) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            CommentaireService com = new CommentaireService();
            CommentaireServiceDAO comDAO = new CommentaireServiceDAO();
            com.setService(listServices.get(lServices.getSelectedIndex()));
            com.setCommentaire(tabCom[j].getText());
            com.setUser(user);
            com.setId(listCom.get(j).getId());
            comDAO.updateCommentaireService(com);
            tabCom[j].setEditable(false);
        }
    }

}
